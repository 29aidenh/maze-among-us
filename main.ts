enum ActionKind {
    Walking,
    Idle,
    Jumping,
    keftwalking
}
scene.onOverlapTile(SpriteKind.Player, myTiles.tile4, function (sprite, location) {
    game.over(true, effects.starField)
    music.siren.stop()
})
controller.A.onEvent(ControllerButtonEvent.Pressed, function () {
    if (controller.up.isPressed()) {
        projectile2 = sprites.createProjectileFromSprite(img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . f . . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . f 5 f . . . . . . . 
            . . . . . 9 9 9 9 9 . . . . . . 
            . . f f f 9 5 5 5 9 f f f . . . 
            . f f f 5 9 5 . 5 9 5 f f f . . 
            . . f f f 9 5 5 5 9 f f f . . . 
            . . . . . 9 9 9 9 9 . . . . . . 
            . . . . . . f 5 f . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . . f . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `, mySprite, 0, -100)
    } else if (controller.left.isPressed()) {
        projectile2 = sprites.createProjectileFromSprite(img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . f . . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . f 5 f . . . . . . . 
            . . . . . 9 9 9 9 9 . . . . . . 
            . . f f f 9 5 5 5 9 f f f . . . 
            . f f f 5 9 5 . 5 9 5 f f f . . 
            . . f f f 9 5 5 5 9 f f f . . . 
            . . . . . 9 9 9 9 9 . . . . . . 
            . . . . . . f 5 f . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . . f . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `, mySprite, -100, 0)
    } else if (controller.down.isPressed()) {
        projectile2 = sprites.createProjectileFromSprite(img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . f . . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . f 5 f . . . . . . . 
            . . . . . 9 9 9 9 9 . . . . . . 
            . . f f f 9 5 5 5 9 f f f . . . 
            . f f f 5 9 5 . 5 9 5 f f f . . 
            . . f f f 9 5 5 5 9 f f f . . . 
            . . . . . 9 9 9 9 9 . . . . . . 
            . . . . . . f 5 f . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . . f . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `, mySprite, 0, 100)
    } else if (controller.right.isPressed()) {
        projectile2 = sprites.createProjectileFromSprite(img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . f . . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . f 5 f . . . . . . . 
            . . . . . 9 9 9 9 9 . . . . . . 
            . . f f f 9 5 5 5 9 f f f . . . 
            . f f f 5 9 5 . 5 9 5 f f f . . 
            . . f f f 9 5 5 5 9 f f f . . . 
            . . . . . 9 9 9 9 9 . . . . . . 
            . . . . . . f 5 f . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . f f f . . . . . . . 
            . . . . . . . f . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `, mySprite, 100, 0)
    }
})
controller.left.onEvent(ControllerButtonEvent.Pressed, function () {
    nonsusgreen_right = animation.createAnimation(ActionKind.Walking, 100)
    animation.attachAnimation(mySprite, nonsusgreen_right)
    nonsusgreen_right.addAnimationFrame(img`
        . . . . . . . . . . . . . . . . 
        . . . . . f f f f . . . . . . . 
        . . . . f 7 7 7 7 f . . . . . . 
        . . . f 7 7 7 7 7 7 . f f . . . 
        . . . f 7 9 9 9 9 7 f 7 7 f . . 
        . . . f 7 9 9 9 9 7 f 7 7 f . . 
        . . . f 7 9 9 9 9 7 f 7 7 f . . 
        . . . f 7 7 7 7 7 7 f 7 7 f . . 
        . . . f 7 7 7 7 7 7 f 7 7 f . . 
        . . . f 7 7 7 7 7 7 f 7 7 f . . 
        . . . f 7 7 7 7 7 7 f f f . . . 
        . . . . f 7 7 f 7 7 f . . . . . 
        . . . . f 7 7 f 7 7 f . . . . . 
        . . . . . f f . f f . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `)
    nonsusgreen_right.addAnimationFrame(img`
        . . . . . . . . . . . . . . . . 
        . . . . . f f f f . . . . . . . 
        . . . . f 7 7 7 7 f . . . . . . 
        . . . f 7 7 7 7 7 7 . f f . . . 
        . . . f 7 9 9 9 9 7 f 7 7 f . . 
        . . . f 7 9 9 9 9 7 f 7 7 f . . 
        . . . f 7 9 9 9 9 7 f 7 7 f . . 
        . . . f 7 7 7 7 7 7 f 7 7 f . . 
        . . . f 7 7 7 7 7 7 f 7 7 f . . 
        . . . f 7 7 7 7 7 7 f 7 7 f . . 
        . . . f 7 7 7 7 7 7 f f f . . . 
        . . . . f 7 7 f 7 7 f . . . . . 
        . . . . f 7 7 f 7 7 f . . . . . 
        . . . . . f f f f f . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `)
    animation.setAction(mySprite, ActionKind.Walking)
})
function createcomputer () {
    task = sprites.create(img`
        . . . . . . . . . . . . . . . . 
        d d d d d d d d d d d d d d d . 
        . d d d d d d d d d d d d d . . 
        . . d d d d d d d d d d d . . . 
        . . . d d d d d d d d d . . . . 
        . . . . d d d d d d d . . . . . 
        . . . . . d d d d d . . . . . . 
        . . . . . . 2 2 2 . . . . . . . 
        . . . . a a a a a a a . . . . . 
        . . . . a a a a a a a . . . . . 
        . 8 8 8 8 8 8 8 8 8 8 8 8 8 8 . 
        . 8 1 8 1 8 1 8 1 8 1 8 1 8 8 . 
        . 8 8 1 8 1 8 1 8 1 8 1 8 1 8 . 
        . 8 8 8 8 8 8 8 8 8 8 8 8 8 8 . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `, SpriteKind.Food)
    tiles.placeOnRandomTile(task, myTiles.tile1)
}
scene.onOverlapTile(SpriteKind.Enemy, myTiles.tile6, function (sprite, location) {
    imposter.setVelocity(10, 10)
})
controller.right.onEvent(ControllerButtonEvent.Pressed, function () {
    nonsusgreen_right = animation.createAnimation(ActionKind.Idle, 100)
    animation.attachAnimation(mySprite, nonsusgreen_right)
    nonsusgreen_right.addAnimationFrame(img`
        . . . . . . . . . . . . . . . 
        . . . . . f f f f . . . . . . 
        . f f . f 7 7 7 7 f . . . . . 
        f 7 7 . 7 7 7 7 7 7 f . . . . 
        f 7 7 f 7 9 9 9 9 7 f . . . . 
        f 7 7 f 7 9 9 9 9 7 f . . . . 
        f 7 7 f 7 9 9 9 9 7 f . . . . 
        f 7 7 f 7 7 7 7 7 7 f . . . . 
        f 7 7 f 7 7 7 7 7 7 f . . . . 
        f 7 7 f 7 7 7 7 7 7 f . . . . 
        f 7 7 f 7 7 7 7 7 7 f . . . . 
        . f f . f 7 7 f 7 7 f . . . . 
        . . . . f 7 7 f 7 7 f . . . . 
        . . . . . f f . f f . . . . . 
        . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . 
        `)
    nonsusgreen_right.addAnimationFrame(img`
        . . . . . . . . . . . . . . . 
        . . . . . f f f f . . . . . . 
        . f f . f 7 7 7 7 f . . . . . 
        f 7 7 . 7 7 7 7 7 7 f . . . . 
        f 7 7 f 7 9 9 9 9 7 f . . . . 
        f 7 7 f 7 9 9 9 9 7 f . . . . 
        f 7 7 f 7 9 9 9 9 7 f . . . . 
        f 7 7 f 7 7 7 7 7 7 f . . . . 
        f 7 7 f 7 7 7 7 7 7 f . . . . 
        f 7 7 f 7 7 7 7 7 7 f . . . . 
        f 7 7 f 7 7 7 7 7 7 f . . . . 
        . f f . f 7 7 f 7 7 f . . . . 
        . . . . f 7 7 f 7 7 f . . . . 
        . . . . . f f f f f . . . . . 
        . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . 
        `)
    animation.setAction(mySprite, ActionKind.Idle)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Food, function (sprite, otherSprite) {
    otherSprite.destroy(effects.warmRadial, 500)
    music.powerUp.play()
    info.changeScoreBy(1)
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Enemy, function (sprite, otherSprite) {
    imposter.destroy(effects.spray, 500)
    info.changeScoreBy(10)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Enemy, function (sprite, otherSprite) {
    mySprite.destroy()
})
let task: Sprite = null
let nonsusgreen_right: animation.Animation = null
let projectile2: Sprite = null
let imposter: Sprite = null
let mySprite: Sprite = null
mySprite = sprites.create(img`
    . . . . . . . . . . . . . . . . 
    . . . . . f f f f . . . . . . . 
    . . . . f 7 7 7 7 f . . . . . . 
    . . . f 7 7 7 7 7 7 . f f . . . 
    . . . f 7 9 9 9 9 7 f 7 7 f . . 
    . . . f 7 9 9 9 9 7 f 7 7 f . . 
    . . . f 7 9 9 9 9 7 f 7 7 f . . 
    . . . f 7 7 7 7 7 7 f 7 7 f . . 
    . . . f 7 7 7 7 7 7 f 7 7 f . . 
    . . . f 7 7 7 7 7 7 f 7 7 f . . 
    . . . f 7 7 7 7 7 7 f f f . . . 
    . . . . f 7 7 f 7 7 f . . . . . 
    . . . . f 7 7 f 7 7 f . . . . . 
    . . . . . f f . f f . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    `, SpriteKind.Player)
controller.moveSprite(mySprite)
tiles.setTilemap(tiles.createTilemap(hex`2e001e00020202020202020202020202020202020202020202020202020202020202020202020202020202060606060202020202020202020202020202020202020202020202020202020202010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020101010101010101010101010101010101020202020202020202020202020202020202020202020202020202020101010202020202020202020202010103010202020202020505010202010101010101010101010101020202020101010102020202020202020202020101010102020202020205050102020101010101010101010101010202020101010101020202020202020202020202020101020202020202010101020201010102020202020202020202020201010101010202020101020202070707020201010202020202020606060202010101020101010101010101010101010102020202020201010202020101010202010102020202020206060602020101010201010101010101010101010101020202020202010101010101010102020101020202020202060606020201010101010102020201010202020201010101010202020101010101010101020201010202020202020606060202060601010101020202010102020202010101010102020201010102020201010202010102020204020206060602020606010101010202010101010202020101010101020202010101020202020202020101020202040202060606020206060101010102020101010101010101010101010202020101010202020202020201010202020402020606060202060601010101020202020101010101010101010102020201010101010101010106060602020204020206060602020606020202020202020201010202020101010101010101010101010101010101060606020202040202060606020206060202020202020101010102020201010101010101010101010101010101010606060202020402020606060101010102020101020201010101020202020202020101010202020202020202020202020202020202020201010101010101020201010202020201010202020202020201010102020202020202020202020202020202020202010102020201010101010102020202010102020206060606010101010202060606010101010102020202020202020101010101010101010101010101010101020202060606060101010102020606060101010101020202020202020201010101010101010101010101010101010202020202020202010101020206060601010101010101020202020202060606020202020202020101010101010102020201010102020101010202020202010101010101010202020202020606060202020202020202020201010101020202010101020201010102020202020106020201010102020202020206060606060101010202020202060606060202020101010101010101010101010606060202010101020202020202020206060601010101010101010606060602020202020101010101010101010106060602020101010202020202020202060606010101010101010106060606020202020201010101010101010101060606020201010102020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202`, img`
    222222222222222222222222222222222222222....222
    22222222222222222222222222.................222
    22222222222222222222222222.................222
    2222222222222222222222222...22222222222....222
    222...22............2222....22222222222....222
    222...22............222.....2222222222222..222
    222...22...222222222222.....222..222...22..222
    222...22...2.............222222..222...22..222
    222...22...2.............222222........22..222
    222...22......222..2222.....222........22..222
    222...22......222..2222.....222...222..22..222
    ......22......22....222.....222...2222222..222
    ......22......22............222...2222222..222
    ......22......2222..........222............222
    ......22..22222222..222....................222
    ......22..222222....222....................222
    ..........22..22....2222222...2222222222222222
    222.......22..2222..2222222...2222222222222222
    222..222......2222..222........22........22222
    222.................222........22........22222
    222.................22222222...22..........222
    222...2222222.......222...22...22222.......222
    222...2222222222....222...22...22222..22...222
    222........22222....222...............22...222
    22222...............22222.............22...222
    22222...............22222.............22...222
    2222222222222222222222222222222222222222222222
    2222222222222222222222222222222222222222222222
    2222222222222222222222222222222222222222222222
    2222222222222222222222222222222222222222222222
    `, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,sprites.castle.tilePath5,myTiles.tile6,sprites.builtin.forestTiles0], TileScale.Sixteen))
scene.cameraFollowSprite(mySprite)
tiles.placeOnRandomTile(mySprite, myTiles.tile3)
info.startCountdown(100)
imposter = sprites.create(img`
    . . . . . . . . . . . . . . . . 
    . . . . . . f f f f f f . . . . 
    . . . . . f 5 5 5 5 5 5 f . . . 
    . . . . f 5 5 5 5 5 5 5 5 f . . 
    . . . f 5 5 5 5 5 5 5 5 5 5 . f 
    . . . f 5 5 9 9 9 9 9 9 5 5 f 5 
    . . . f 5 5 9 9 9 9 9 9 5 5 f 5 
    9 9 5 9 5 5 9 9 9 9 9 9 5 5 f 5 
    9 9 9 9 5 5 5 5 5 5 5 5 5 5 f 5 
    . . 9 5 5 5 5 5 5 5 5 5 5 5 f 5 
    . f 5 5 5 5 5 5 5 5 5 5 5 5 f 5 
    . . f f 5 5 5 5 5 5 5 5 5 5 f 5 
    . . . . f f 5 5 5 5 5 5 5 f . f 
    . . . . . f 5 5 5 5 5 5 f . . . 
    . . . . . f 5 5 f f 5 5 f . . . 
    . . . . . . f f . . f f . . . . 
    `, SpriteKind.Enemy)
tiles.placeOnRandomTile(imposter, sprites.castle.tilePath5)
imposter.follow(mySprite, 5)
game.onUpdateInterval(500, function () {
    createcomputer()
})
